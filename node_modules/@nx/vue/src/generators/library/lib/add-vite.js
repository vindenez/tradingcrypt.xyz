"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addVite = void 0;
const devkit_1 = require("@nx/devkit");
const versions_1 = require("../../../utils/versions");
async function addVite(tree, options) {
    const tasks = [];
    // Set up build target
    if (options.bundler === 'vite') {
        const { viteConfigurationGenerator, createOrEditViteConfig } = (0, devkit_1.ensurePackage)('@nx/vite', versions_1.nxVersion);
        const viteTask = await viteConfigurationGenerator(tree, {
            uiFramework: 'none',
            project: options.name,
            newProject: true,
            includeLib: true,
            inSourceTests: options.inSourceTests,
            includeVitest: options.unitTestRunner === 'vitest',
            skipFormat: true,
            testEnvironment: 'jsdom',
            addPlugin: options.addPlugin,
        });
        tasks.push(viteTask);
        createOrEditViteConfig(tree, {
            project: options.name,
            includeLib: true,
            includeVitest: options.unitTestRunner === 'vitest',
            inSourceTests: options.inSourceTests,
            imports: [`import vue from '@vitejs/plugin-vue'`],
            plugins: ['vue()'],
        }, false);
    }
    // Set up test target
    if (options.unitTestRunner === 'vitest' &&
        options.bundler !== 'vite' // tests are already configured if bundler is vite
    ) {
        const { vitestGenerator, createOrEditViteConfig } = (0, devkit_1.ensurePackage)('@nx/vite', versions_1.nxVersion);
        const vitestTask = await vitestGenerator(tree, {
            uiFramework: 'none',
            project: options.name,
            coverageProvider: 'v8',
            inSourceTests: options.inSourceTests,
            skipFormat: true,
            testEnvironment: 'jsdom',
            addPlugin: options.addPlugin,
        });
        tasks.push(vitestTask);
        createOrEditViteConfig(tree, {
            project: options.name,
            includeLib: true,
            includeVitest: true,
            inSourceTests: options.inSourceTests,
            imports: [`import vue from '@vitejs/plugin-vue'`],
            plugins: ['vue()'],
        }, true);
    }
    return (0, devkit_1.runTasksInSerial)(...tasks);
}
exports.addVite = addVite;
