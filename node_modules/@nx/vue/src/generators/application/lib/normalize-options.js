"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeOptions = exports.normalizeDirectory = void 0;
const devkit_1 = require("@nx/devkit");
const project_name_and_root_utils_1 = require("@nx/devkit/src/generators/project-name-and-root-utils");
function normalizeDirectory(options) {
    options.directory = options.directory?.replace(/\\{1,2}/g, '/');
    const { projectDirectory } = (0, devkit_1.extractLayoutDirectory)(options.directory);
    return projectDirectory
        ? `${(0, devkit_1.names)(projectDirectory).fileName}/${(0, devkit_1.names)(options.name).fileName}`
        : (0, devkit_1.names)(options.name).fileName;
}
exports.normalizeDirectory = normalizeDirectory;
async function normalizeOptions(host, options, callingGenerator = '@nx/vue:application') {
    const { projectName: appProjectName, projectRoot: appProjectRoot, projectNameAndRootFormat, } = await (0, project_name_and_root_utils_1.determineProjectNameAndRootOptions)(host, {
        name: options.name,
        projectType: 'application',
        directory: options.directory,
        projectNameAndRootFormat: options.projectNameAndRootFormat,
        rootProject: options.rootProject,
        callingGenerator,
    });
    options.rootProject = appProjectRoot === '.';
    options.projectNameAndRootFormat = projectNameAndRootFormat;
    const e2eProjectName = options.rootProject ? 'e2e' : `${appProjectName}-e2e`;
    const e2eProjectRoot = options.rootProject ? 'e2e' : `${appProjectRoot}-e2e`;
    const parsedTags = options.tags
        ? options.tags.split(',').map((s) => s.trim())
        : [];
    const normalized = {
        ...options,
        name: (0, devkit_1.names)(options.name).fileName,
        projectName: appProjectName,
        appProjectRoot,
        e2eProjectName,
        e2eProjectRoot,
        parsedTags,
    };
    normalized.style = options.style ?? 'css';
    normalized.routing = normalized.routing ?? false;
    normalized.unitTestRunner ??= 'vitest';
    normalized.e2eTestRunner = normalized.e2eTestRunner ?? 'playwright';
    return normalized;
}
exports.normalizeOptions = normalizeOptions;
