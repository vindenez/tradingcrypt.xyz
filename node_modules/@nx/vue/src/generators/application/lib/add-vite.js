"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addVite = void 0;
const devkit_1 = require("@nx/devkit");
const vite_1 = require("@nx/vite");
async function addVite(tree, options) {
    // Set up build target (and test target if using vitest)
    const viteTask = await (0, vite_1.viteConfigurationGenerator)(tree, {
        uiFramework: 'none',
        project: options.name,
        newProject: true,
        inSourceTests: options.inSourceTests,
        includeVitest: options.unitTestRunner === 'vitest',
        skipFormat: true,
        testEnvironment: 'jsdom',
        addPlugin: options.addPlugin,
    });
    (0, vite_1.createOrEditViteConfig)(tree, {
        project: options.name,
        includeLib: false,
        includeVitest: options.unitTestRunner === 'vitest',
        inSourceTests: options.inSourceTests,
        imports: [`import vue from '@vitejs/plugin-vue'`],
        plugins: ['vue()'],
    }, false);
    // Update build to skip type checking since tsc won't work on .vue files.
    // Need to use vue-tsc instead.
    const projectConfig = (0, devkit_1.readProjectConfiguration)(tree, options.name);
    if (projectConfig.targets?.build?.options) {
        projectConfig.targets.build.options.skipTypeCheck = true;
        (0, devkit_1.updateProjectConfiguration)(tree, options.name, projectConfig);
    }
    return viteTask;
}
exports.addVite = addVite;
